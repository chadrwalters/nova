Plan: Fix MARKDOWN_SPLIT_THREEFILES Phase to Properly Split Content
This plan outlines the steps to fix the MARKDOWN_SPLIT_THREEFILES phase that currently fails to properly split the aggregated markdown into three separate files. The fix will ensure proper content distribution and preservation.

---
Branch Strategy
Create a Feature Branch
✓ Name it something like: fix/markdown-split-content-distribution
✓ Branch from current main
✓ Push branch to remote for collaboration
✓ Keep in sync with main during development

---
Implementation Steps
1. Fix Content Detection Logic
(Example: "src/pipeline_processors/three_file_split_processor.py")
Implement proper content detection and categorization logic to identify different types of content in the aggregated file.

Example snippet:
```python
class ThreeFileSplitProcessor:
    def detect_content_type(self, content: str) -> ContentType:
        """
        Analyzes content to determine if it's summary, raw notes, or attachment
        based on markers and content structure.
        """
        # Implementation details below in tasks
```

| Task ID | Description | Status |
|---------|------------------------------------------------------------------|--------|
| 1.1 | Implement robust marker detection (--==SUMMARY==-- etc.) | DONE |
| 1.2 | Add content type detection based on headers and structure | DONE |
| 1.3 | Create content categorization rules | DONE |
| 1.4 | Add tests for content detection logic | DONE |

---
2. Implement Content Distribution Logic
Ensure proper distribution of content to the three output files based on content type and structure.

Example structure:
```python
def distribute_content(self, content: str, content_type: ContentType) -> None:
    """
    Routes content to appropriate output file based on type:
    - Analyzed/refined content → summary.md
    - Original entries/notes → raw_notes.md
    - References/attachments → attachments.md
    """
    # Implementation details below in tasks
```

| Task ID | Description | Status |
|---------|----------------------------------------------------------------------------------|--------|
| 2.1 | Implement summary content identification (look for "Refined Thoughts", "Analysis", etc.) | DONE |
| 2.2 | Implement raw notes identification (original entries, communications) | DONE |
| 2.3 | Implement attachment content identification (file refs, embedded content) | DONE |
| 2.4 | Add content routing logic to appropriate files | DONE |
| 2.5 | Add tests for content distribution | DONE |

---
3. Fix Content Preservation
Ensure no content is lost during the split process and all relationships are maintained.

| Task ID | Description | Status |
|---------|------------------------------------------------------------------|--------|
| 3.1 | Add content validation before and after split | DONE |
| 3.2 | Implement size tracking for content preservation | DONE |
| 3.3 | Add relationship tracking between split content | DONE |
| 3.4 | Add tests for content preservation | DONE |

---
4. Enhance Navigation and References
Implement proper cross-file navigation and reference updating.

| Task ID | Description | Status |
|---------|-----------------------------------------------------------|--------|
| 4.1 | Add navigation header generation for each file | DONE |
| 4.2 | Update internal references to point to correct files | DONE |
| 4.3 | Add bi-directional linking between files | DONE |
| 4.4 | Add tests for navigation and references | DONE |

---
5. Testing and Validation
Comprehensive testing of the fixed implementation.

| Task ID | Description | Status |
|---------|-----------------------------------------------------------|--------|
| 5.1 | Test with large files (>400KB) | DONE |
| 5.2 | Test with various content types and structures | DONE |
| 5.3 | Test navigation and reference integrity | DONE |
| 5.4 | Test content preservation across splits | DONE |

---
Expected Output Characteristics:

1. summary.md (~100-150KB):
   - All "Refined Thoughts" sections
   - All "Analysis" sections
   - All "Key Insights" sections
   - Navigation links to other files
   - Properly formatted headers

2. raw_notes.md (~200-250KB):
   - Original journal entries
   - Meeting notes
   - Direct communications
   - Navigation links to other files
   - Original timestamps and metadata

3. attachments.md (~50-100KB):
   - All file references
   - All embedded content markers
   - Image links
   - PDF references
   - Navigation links to other files

Success Criteria:
- No content loss (total size ≈ input size)
- Proper content categorization
- Working navigation
- Maintained relationships
- Preserved formatting
- Complete test coverage

Current Progress
Tasks Completed: 17 of 17
Tasks Remaining: 0 of 17
Progress: [===============] 100%
~~~~~