# Nova System PRD (LLM-Oriented)

This PRD describes the Nova document processing system for transforming Markdown inputs into various outputs (parse, split) with an emphasis on local execution and comprehensive console output features. The system aims to handle Markdown files with attachments and generate structured outputs linked by a robust metadata layer.

# 1. Overview

Nova operates as a multi-phase pipeline that:
- Reads Markdown (with inline/base64 attachments)
- Transforms content using the "markitdown" library (name = markitdown, version = 0.0.1a3) for all Markdown parsing and transformations
- Outputs processed markdown and attachments in clearly structured directories
- Generates metadata enabling the creation of interconnected documents in the split phase

A specialized console output system provides logging, timing, and debugging information throughout the pipeline.

# 2. Environment & Configuration

Nova replaces .env files with YAML or JSON configuration files for better structure and validation.

## 2.1 Key Configuration Settings

### Base Directories
- base_dir: Root directory for all Nova operations
- input_dir: Directory for raw Markdown files (_NovaInput)
- processing_dir: Directory for intermediate files (_NovaProcessing)
- output_dir: Directory for final outputs (_Nova)

### Phase Directories
- markdown_parse_dir: Directory for parse-phase outputs
- markdown_split_dir: Directory for split-phase outputs

### Image Directories
- original_images_dir: Storage for original images
- processed_images_dir: Storage for processed images
- image_metadata_dir: Metadata associated with images

### Processing Options
- log_level: Debugging verbosity (e.g., DEBUG, INFO)
- enable_image_processing: Enable or disable image processing

### API Keys
- openai_api_key: Key for OpenAI API integration
- xai_api_key: Key for xAI API integration

## 2.2 Example YAML Configuration

```yaml
base_dir: "/Users/ChadWalters/Library/Mobile Documents/com~apple~CloudDocs"
input_dir: "${base_dir}/_NovaInput"
processing_dir: "${base_dir}/_NovaProcessing"
output_dir: "${base_dir}/_Nova"

# Phase Directories
markdown_parse_dir: "${processing_dir}/phases/markdown_parse"
markdown_split_dir: "${processing_dir}/phases/markdown_split"

# Image Directories
original_images_dir: "${processing_dir}/images/original"
processed_images_dir: "${processing_dir}/images/processed"
image_metadata_dir: "${processing_dir}/images/metadata"

# Processing Configuration
log_level: "DEBUG"
enable_image_processing: true

# API Keys
openai_api_key: "sk-proj-K5hzp3DftP..."
xai_api_key: "xai-BHx3cXzOUoY..."
```

# 3. Metadata Schema for Parse Phase

The parse phase generates metadata essential for the split phase. Metadata tracks the structure and relationships between summaries, raw notes, and attachments.

## 3.1 Metadata File Structure

### Top-Level Keys
- id: Unique identifier for the file
- filename: Name of the processed file
- summary_start: Line number or position marking the start of the summary section
- raw_notes_start: Line number or position marking the start of the raw notes section
- attachments: List of attachments extracted or converted
- sections: Parsed structure of the Markdown file, detailing summary and raw notes content
- links: Metadata links to connect sections and attachments across split-phase outputs

### Example Metadata (JSON)

```json
{
  "id": "unique_file_id",
  "filename": "document1.md",
  "summary_start": 0,
  "raw_notes_start": 42,
  "attachments": [
    {
      "type": "image",
      "filename": "image1.png",
      "path": "/path/to/processing/attachments/image1.png"
    },
    {
      "type": "pdf",
      "filename": "file1.pdf",
      "path": "/path/to/processing/attachments/file1.pdf"
    }
  ],
  "sections": [
    {
      "type": "summary",
      "content": "This is the summary section."
    },
    {
      "type": "raw_notes",
      "content": "These are raw notes."
    }
  ],
  "links": {
    "summary_to_attachments": [
      {"attachment": "image1.png", "position": "summary"}
    ],
    "raw_notes_to_attachments": [
      {"attachment": "file1.pdf", "position": "raw_notes"}
    ]
  }
}
```

# 4. Phases in Detail

## 4.1 Parse Phase

### Purpose
- Convert Markdown files and their attachments into Markdown representations
- Extract structured metadata enabling the split phase

### Key Tasks
1. Markdown Parsing:
- Identify sections (summary and raw notes) based on the ---RAW NOTES--- marker
- Separate content into summary and raw notes

2. Attachment Handling:
- Extract Base64-encoded attachments and convert them into regular files
- Process attachments (e.g., PDF or DOC) into Markdown representations

3. Metadata Generation:
- Record relationships between summary, raw notes, and attachments
- Identify where attachments appear in the summary and raw notes

### Outputs
- Refined Markdown files with attachment links and metadata references
- Metadata files containing structural and relational information

## 4.2 Split Phase

### Purpose
- Create three interconnected documents:
1. A consolidated summary of all summaries from input Markdown files
2. A consolidated attachment Markdown file
3. A consolidated raw notes file

### Key Tasks
1. Consolidation:
- Aggregate all summary sections into a single Markdown file
- Aggregate all raw notes sections into another Markdown file
- Consolidate attachment representations into a Markdown file

2. Metadata Linking:
- Insert metadata links in the summary and raw notes files, pointing to the attachment file
- Ensure each attachment links back to its originating section

### Outputs
- summary.md: All summary sections with links to attachments
- attachments.md: Markdown representations of all attachments
- raw_notes.md: All raw notes with links to attachments and summaries

# 5. Console Output Requirements

## 5.1 Logging
- Logs use consistent levels: info, warning, error, success
- log_level controls verbosity (e.g., DEBUG for detailed logs)

## 5.2 Progress Tracking
- Progress bars display real-time updates for each phase
- Summaries in tabular format highlight processed items and elapsed time

## 5.3 Formatting & Color
- Optional colored console output for quick distinction between log levels

# 6. Summary of Operation
1. Place raw Markdown files and their attachments in the input directory
2. Run the parse phase to:
- Convert attachments to Markdown representations
- Extract and organize summaries, raw notes, and attachments
- Generate metadata linking all components
3. Run the split phase to:
- Create consolidated documents (summary, attachments, raw notes)
- Ensure metadata links connect all outputs for easy navigation